// Code generated by moq; DO NOT EDIT.
// github.com/matryer/moq

package cloudformationdeploy

import (
	"context"
	"github.com/aws/aws-sdk-go-v2/service/cloudformation"
	"sync"
)

// Ensure, that DeployInterfaceMock does implement DeployInterface.
// If this is not the case, regenerate this file with moq.
var _ DeployInterface = &DeployInterfaceMock{}

// DeployInterfaceMock is a mock implementation of DeployInterface.
//
//     func TestSomethingThatUsesDeployInterface(t *testing.T) {
//
//         // make and configure a mocked DeployInterface
//         mockedDeployInterface := &DeployInterfaceMock{
//             CreateStackFunc: func(ctx context.Context, params *cloudformation.CreateStackInput, optFns ...func(*cloudformation.Options)) (*cloudformation.CreateStackOutput, error) {
// 	               panic("mock out the CreateStack method")
//             },
//         }
//
//         // use mockedDeployInterface in code that requires DeployInterface
//         // and then make assertions.
//
//     }
type DeployInterfaceMock struct {
	// CreateStackFunc mocks the CreateStack method.
	CreateStackFunc func(ctx context.Context, params *cloudformation.CreateStackInput, optFns ...func(*cloudformation.Options)) (*cloudformation.CreateStackOutput, error)

	// calls tracks calls to the methods.
	calls struct {
		// CreateStack holds details about calls to the CreateStack method.
		CreateStack []struct {
			// Ctx is the ctx argument value.
			Ctx context.Context
			// Params is the params argument value.
			Params *cloudformation.CreateStackInput
			// OptFns is the optFns argument value.
			OptFns []func(*cloudformation.Options)
		}
	}
	lockCreateStack sync.RWMutex
}

// CreateStack calls CreateStackFunc.
func (mock *DeployInterfaceMock) CreateStack(ctx context.Context, params *cloudformation.CreateStackInput, optFns ...func(*cloudformation.Options)) (*cloudformation.CreateStackOutput, error) {
	if mock.CreateStackFunc == nil {
		panic("DeployInterfaceMock.CreateStackFunc: method is nil but DeployInterface.CreateStack was just called")
	}
	callInfo := struct {
		Ctx    context.Context
		Params *cloudformation.CreateStackInput
		OptFns []func(*cloudformation.Options)
	}{
		Ctx:    ctx,
		Params: params,
		OptFns: optFns,
	}
	mock.lockCreateStack.Lock()
	mock.calls.CreateStack = append(mock.calls.CreateStack, callInfo)
	mock.lockCreateStack.Unlock()
	return mock.CreateStackFunc(ctx, params, optFns...)
}

// CreateStackCalls gets all the calls that were made to CreateStack.
// Check the length with:
//     len(mockedDeployInterface.CreateStackCalls())
func (mock *DeployInterfaceMock) CreateStackCalls() []struct {
	Ctx    context.Context
	Params *cloudformation.CreateStackInput
	OptFns []func(*cloudformation.Options)
} {
	var calls []struct {
		Ctx    context.Context
		Params *cloudformation.CreateStackInput
		OptFns []func(*cloudformation.Options)
	}
	mock.lockCreateStack.RLock()
	calls = mock.calls.CreateStack
	mock.lockCreateStack.RUnlock()
	return calls
}
